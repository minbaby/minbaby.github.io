<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on 霸气千秋</title>
    <link>https://minbaby.github.io/categories/php/</link>
    <description>Recent content in php on 霸气千秋</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 07 Jun 2020 12:29:09 +0000</lastBuildDate>
    
	<atom:link href="https://minbaby.github.io/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hyperf Metrics</title>
      <link>https://minbaby.github.io/post/2020/06/hyperf-metrics-demo/</link>
      <pubDate>Sun, 07 Jun 2020 12:29:09 +0000</pubDate>
      
      <guid>https://minbaby.github.io/post/2020/06/hyperf-metrics-demo/</guid>
      <description>代码地址 GitHub - extra-demo/hyperf-metrics-demo: hyperf-metrics-demo 创建项目并集成组件 创建 hyperf 项目 composer create-project hyperf/hyperf-skeleton hyperf-metrics-demo 一路默认即可，等待它安装完成 集成组件 composer require hyperf/metric 发布配置文件 php bin/hyperf.php vendor:publish hyperf/metric 修改配置文件 修改 /config/autoload/metric.php 文件 //before &#39;default&#39;</description>
    </item>
    
    <item>
      <title>如何动态的给类增加方法</title>
      <link>https://minbaby.github.io/post/2020/04/how-to-dynamic-add-mthod-to-class/</link>
      <pubDate>Sat, 11 Apr 2020 21:57:50 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2020/04/how-to-dynamic-add-mthod-to-class/</guid>
      <description>前言 之所以写这篇博客，是因为写 http demo 的时候的时候，用到了 laravel 里边的 validation 组件，按照老版本的方式调用 $this-&amp;gt;validate() 的时候，找不到这个方法了，所以就看了一下文档，发</description>
    </item>
    
    <item>
      <title>前缀表达式&#43;中缀表达式&#43;后缀表达式</title>
      <link>https://minbaby.github.io/post/2019-07/qian-zhong-hou-biao-da-shi/</link>
      <pubDate>Tue, 23 Jul 2019 08:11:00 +0000</pubDate>
      
      <guid>https://minbaby.github.io/post/2019-07/qian-zhong-hou-biao-da-shi/</guid>
      <description>前言 相关代码： some-code/php/calculator at master · extra-demo/some-code · GitHub 三种表达式是什么 前缀表达式 波兰表示法（Polish notation，或波兰记法），是一种逻辑、算术和代数表示方法</description>
    </item>
    
    <item>
      <title>Php Incomplete Class</title>
      <link>https://minbaby.github.io/post/2019-06/php-incomplete-class/</link>
      <pubDate>Sun, 09 Jun 2019 03:58:58 +0000</pubDate>
      
      <guid>https://minbaby.github.io/post/2019-06/php-incomplete-class/</guid>
      <description>事件重现 在整理 sentry 报错的发现了一个奇怪的 bug。 The script tried to execute a method or access a property of an incomplete object. Please ensure that the class definition &amp;quot;XXXModel&amp;quot; of the object you are trying to operate on was loaded _before_ unserialize() gets called or provide a __autoload() function to load the class definition</description>
    </item>
    
    <item>
      <title>Design Pattern</title>
      <link>https://minbaby.github.io/post/2019-03/design-pattern/</link>
      <pubDate>Wed, 20 Mar 2019 02:47:14 +0000</pubDate>
      
      <guid>https://minbaby.github.io/post/2019-03/design-pattern/</guid>
      <description>设计模式是什么？ 设计模式（design pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案。 所以设计模式不是固定的</description>
    </item>
    
    <item>
      <title>phpbrew set mirror（加速）</title>
      <link>https://minbaby.github.io/post/2018-11/phpbrew-set-mirror/</link>
      <pubDate>Sat, 24 Nov 2018 19:42:15 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2018-11/phpbrew-set-mirror/</guid>
      <description>-- phpbrew 是一个构建、安装多版本 PHP 到用户根目录的工具。 phpbrew 能做什么？ 支持使用 PDO，mysql，sqlite，debug 等不同「Variants」编</description>
    </item>
    
    <item>
      <title>laravel(lumen) schedule 使用腾讯云 redis 作为缓存出现的问题</title>
      <link>https://minbaby.github.io/post/2018-03/laravel-lumen-schedule-shi-yong-teng-xun-yun-redis/</link>
      <pubDate>Fri, 16 Mar 2018 14:34:27 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2018-03/laravel-lumen-schedule-shi-yong-teng-xun-yun-redis/</guid>
      <description>api 项目上线之后 sentry 上收集到了一个奇怪的问题。 Predis\Response\ServerExceptionvendor/predis/predis/src/Client.php in onErrorResponse errorERR unknown command &#39; EVAL &#39;php 看到这个 EVAL 这个命令，感觉是因为使用 lua 的原因，但是项目中我们又没有在 redis 中使用 lua 脚本</description>
    </item>
    
    <item>
      <title>Laravel 框架记录执行时间并进行相关处理</title>
      <link>https://minbaby.github.io/post/2017-07/laravel-%E6%A1%86%E6%9E%B6%E8%AE%B0%E5%BD%95%E6%89%A7%E8%A1%8C%E6%97%B6%E9%97%B4%E5%B9%B6%E8%BF%9B%E8%A1%8C%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 31 Jul 2017 14:55:01 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2017-07/laravel-%E6%A1%86%E6%9E%B6%E8%AE%B0%E5%BD%95%E6%89%A7%E8%A1%8C%E6%97%B6%E9%97%B4%E5%B9%B6%E8%BF%9B%E8%A1%8C%E7%9B%B8%E5%85%B3%E5%A4%84%E7%90%86/</guid>
      <description>只需要把下边的方法放在 bootstrap/app.php 文件即可。 /* |-------------------------------------------------------------------------- | 记录执行时间， 如果大于 3s 则把信息更新到 sentry |-------------------------------------------------------------------------- */ app()-&amp;gt;terminating(function () { $handleCliInfo = function () { // 哪些命令不进行记录 $except = [ &#39;queue:work&#39; ]; $info = with(new \Symfony\Component\Console\Input\ArgvInput())-&amp;gt;getFirstArgument(); return</description>
    </item>
    
    <item>
      <title>删除 nginx 版本 和 php 的 x-power-by</title>
      <link>https://minbaby.github.io/post/2015-09/remove-nginx-and-php-x-power-by/</link>
      <pubDate>Sun, 06 Sep 2015 16:26:38 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2015-09/remove-nginx-and-php-x-power-by/</guid>
      <description>隐藏Nginx版本号 Nginx的版本号主要在两个地方会有，一个是HTTP header，有个Server:nginx/1.x.x类似会暴露We</description>
    </item>
    
    <item>
      <title>Packagist / Composer  镜像</title>
      <link>https://minbaby.github.io/post/2015-08/composer-mirrors/</link>
      <pubDate>Wed, 05 Aug 2015 08:52:18 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2015-08/composer-mirrors/</guid>
      <description>注意：http://packagist.phpcomposer.com 这个似乎出问题了，现在的建议使用这个https://packagist</description>
    </item>
    
    <item>
      <title>xunsearch 安装</title>
      <link>https://minbaby.github.io/post/2015-06/xunsearch-install/</link>
      <pubDate>Sat, 27 Jun 2015 14:34:08 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2015-06/xunsearch-install/</guid>
      <description>xunsearch 安装 wget http://www.xunsearch.com/download/xunsearch-full-latest.tar.bz2 tar -xjf xunsearch-full-latest.tar.bz2 ./setup.sh 安装 # 如果缺少 zlib.h aptitude install zlib1g-dev xunsearch 在当前版本不支持配置 data 目录 如果需要更改目录,可以使用软连接 +=================================================+ | Installation completed successfully, Thanks you | | 安装成功，感谢选择和使</description>
    </item>
    
    <item>
      <title>psr-0 解读</title>
      <link>https://minbaby.github.io/post/2015-06/psr-0/</link>
      <pubDate>Mon, 22 Jun 2015 12:28:00 +0000</pubDate>
      
      <guid>https://minbaby.github.io/post/2015-06/psr-0/</guid>
      <description>PSR-0 自动加载规范 Deprecated - As of 2014-10-21 PSR-0 has been marked as deprecated. PSR-4 is now recommended as an alternative. 在 2014-10-21 被标记为已过期。 推荐使用 PSR-4 规范 The following describes the mandatory requirements that must be adhered to for autoloader interoperability. Mandatory （规范） A fully-qualified namespace and class must have the following</description>
    </item>
    
    <item>
      <title>php 内置 web server</title>
      <link>https://minbaby.github.io/post/2015-06/php-build-in-web-server/</link>
      <pubDate>Sun, 07 Jun 2015 08:57:55 +0800</pubDate>
      
      <guid>https://minbaby.github.io/post/2015-06/php-build-in-web-server/</guid>
      <description>PHP 5.4.0起， CLI SAPI 提供了一个内置的Web服务器。 这个内置的Web服务器主要用于本地开发使用，不可用于线上产品环境。 URI请求会被发送到PH</description>
    </item>
    
  </channel>
</rss>